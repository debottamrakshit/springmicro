version: "3"

volumes:
   postgres_data:
    driver: local
   mongodb_data:

services:
   config-server:
    build: ./config-server 
    image: config-server:latest 
    ports:
      - "8888:8888"
    networks:
      - private-cloud-network

   elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
    container_name: elasticsearch
    environment:
      - "discovery.type=single-node"
    ports: 
      - "9200:9200"
      - "9300:9300"
    depends_on:
      - config-server
    networks:
      - private-cloud-network

   kibana:
    image: docker.elastic.co/kibana/kibana:7.6.1
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
    networks:
      - private-cloud-network
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    

   logstash:
    image: docker.elastic.co/logstash/logstash:7.6.1
    container_name: logstash
    ports:
      - "5000:5000"
    networks:
      - private-cloud-network
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    
   zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=elasticsearch:9200
    networks:
      - private-cloud-network
    depends_on:
      - elasticsearch
    links:
      - elasticsearch

   
   eureka-server-1:
    build: ./eurekaserver 
    image: eureka-server-1:latest 
    ports:
      - "8761:8761"
    environment:
      spring.zipkin.baseUrl: http://zipkin:9411/
      LOGSTASH_URL: logstash:5000
      spring.cloud.config.uri: http://config-server:8888
    depends_on:
      - config-server
      - zipkin
      - logstash
    links:
      - config-server
      - zipkin
      - logstash
    networks:
      - private-cloud-network
      
   postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      - private-cloud-network

   keycloak:
    image: jboss/keycloak
    command: "-b 0.0.0.0 -Dkeycloak.profile.feature.upload_scripts=enabled -Dkeycloak.import=/opt/jboss/keycloak/realm-api.json"
    volumes:
      - ./realm-api.json:/opt/jboss/keycloak/realm-api.json
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - 8080:8080
    depends_on:
      - postgres
    links:
      - postgres
    networks:
      - private-cloud-network

   mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=testDB
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - mongodb_data:/data/db
    networks:
      - private-cloud-network

   atm-service:
    build: ./atm-service 
    image: atm-service:latest 
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server-1
      - config-server
      - zipkin
      - logstash
      - mongodb
    links:
      - eureka-server-1
      - config-server
      - zipkin
      - logstash
      - mongodb
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-server-1:8761/eureka/
      spring.cloud.config.uri: http://config-server:8888
      spring.security.oauth2.resourceserver.jwt.jwk-set-uri: http://keycloak:8080/auth/realms/microserviceexample/protocol/openid-connect/certs
      spring.zipkin.baseUrl: http://zipkin:9411/
      LOGSTASH_URL: logstash:5000
      spring.data.mongodb.host: localhost
      spring.data.mongodb.port: 27017
      spring.data.mongodb.database: testDB
      spring.data.mongodb.username: admin
      spring.data.mongodb.password: admin
      
    networks:
      - private-cloud-network
      
   bank-service:
    build: ./bank-service
    image: bank-service:latest 
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server-1
      - config-server
      - zipkin
      - logstash
      - mongodb
    links:
      - eureka-server-1
      - config-server
      - zipkin
      - logstash
      - mongodb
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-server-1:8761/eureka/
      spring.cloud.config.uri: http://config-server:8888
      spring.security.oauth2.resourceserver.jwt.jwk-set-uri: http://keycloak:8080/auth/realms/microserviceexample/protocol/openid-connect/certs
      spring.zipkin.baseUrl: http://zipkin:9411/
      LOGSTASH_URL: logstash:5000
      spring.data.mongodb.host: localhost
      spring.data.mongodb.port: 27017
      spring.data.mongodb.database: testDB
      spring.data.mongodb.username: admin
      spring.data.mongodb.password: admin
    networks:
      - private-cloud-network
      
   gateway-service:
    build: ./gateway
    image: gateway-service:latest 
    ports:
      - "8084:8084"
    depends_on:
      - eureka-server-1
      - config-server
      - zipkin
      - logstash
    links:
      - eureka-server-1
      - config-server
      - zipkin
      - logstash
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-server-1:8761/eureka/
      spring.cloud.config.uri: http://config-server:8888
      spring.zipkin.baseUrl: http://zipkin:9411/
    networks:
      - private-cloud-network

networks:
  private-cloud-network:
     driver: bridge

